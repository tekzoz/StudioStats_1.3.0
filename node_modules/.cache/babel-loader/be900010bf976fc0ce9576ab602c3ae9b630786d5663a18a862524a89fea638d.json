{"ast":null,"code":"var _jsxFileName = \"/Users/marcoaugustocomba/Documents/GitHub/StudioStats_1.2/src/CompareYearsView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ArrowLeft, TrendingUp, TrendingDown } from 'lucide-react';\nimport { getYearData, getAvailableYears } from './data';\n\n// ... (mantieni tutti gli styled components precedenti)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getCurrentYearAndMonth = () => {\n  const now = new Date();\n  return {\n    currentYear: now.getFullYear(),\n    currentMonth: now.getMonth() + 1\n  };\n};\nconst YearDataDisplay = ({\n  yearData,\n  yearLabel,\n  limitedToMonth\n}) => {\n  if (!yearData) return null;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n      children: yearLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataSection, {\n      children: [/*#__PURE__*/_jsxDEV(DataTitle, {\n        children: [\"Totale Turni \", limitedToMonth ? `(fino a ${limitedToMonth})` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: yearData.totaleTurni\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataSection, {\n      children: [/*#__PURE__*/_jsxDEV(DataTitle, {\n        children: \"Media Mensile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: yearData.mediaMensile.toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = YearDataDisplay;\nconst DifferenceDisplay = ({\n  yearData1,\n  yearData2,\n  year1Label,\n  year2Label,\n  limitedToMonth\n}) => {\n  if (!yearData1 || !yearData2) return null;\n  const calculateDifference = (value1, value2) => {\n    const diff = value1 - value2;\n    const percentage = (diff / value2 * 100).toFixed(2);\n    return {\n      diff,\n      percentage\n    };\n  };\n  const totalTurniDiff = calculateDifference(yearData1.totaleTurni, yearData2.totaleTurni);\n  const mediaMensileDiff = calculateDifference(yearData1.mediaMensile, yearData2.mediaMensile);\n  const renderDifference = (label, diff, percentage) => {\n    const isPositive = diff > 0;\n    const Icon = isPositive ? TrendingUp : TrendingDown;\n    return /*#__PURE__*/_jsxDEV(DifferenceSection, {\n      isPositive: isPositive,\n      children: [/*#__PURE__*/_jsxDEV(DataTitle, {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        size: 20,\n        style: {\n          marginRight: '8px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [isPositive ? '+' : '', diff.toFixed(2), \" (\", isPositive ? '+' : '', percentage, \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n      children: \"Differenze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '16px'\n      },\n      children: [year1Label, \" rispetto a \", year2Label, limitedToMonth ? ` (fino a ${limitedToMonth})` : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), renderDifference('Totale Turni', totalTurniDiff.diff, totalTurniDiff.percentage), renderDifference('Media Mensile', mediaMensileDiff.diff, mediaMensileDiff.percentage)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c2 = DifferenceDisplay;\nconst CompareYearsView = ({\n  setView\n}) => {\n  _s();\n  var _availableYears$find, _availableYears$find2, _availableYears$find3, _availableYears$find4;\n  const [selectedYear1, setSelectedYear1] = useState('');\n  const [selectedYear2, setSelectedYear2] = useState('');\n  const [yearData1, setYearData1] = useState(null);\n  const [yearData2, setYearData2] = useState(null);\n  const [availableYears, setAvailableYears] = useState([]);\n  const [limitedToMonth, setLimitedToMonth] = useState(null);\n  const {\n    currentYear,\n    currentMonth\n  } = getCurrentYearAndMonth();\n  useEffect(() => {\n    setAvailableYears(getAvailableYears());\n  }, []);\n  useEffect(() => {\n    if (selectedYear1 && selectedYear2) {\n      let limitMonth = null;\n      if (selectedYear1 == currentYear || selectedYear2 == currentYear) {\n        limitMonth = currentMonth;\n      }\n      setLimitedToMonth(limitMonth);\n      setYearData1(getYearData(selectedYear1, limitMonth));\n      setYearData2(getYearData(selectedYear2, limitMonth));\n    }\n  }, [selectedYear1, selectedYear2, currentYear, currentMonth]);\n  const monthNames = [\"Gennaio\", \"Febbraio\", \"Marzo\", \"Aprile\", \"Maggio\", \"Giugno\", \"Luglio\", \"Agosto\", \"Settembre\", \"Ottobre\", \"Novembre\", \"Dicembre\"];\n  return /*#__PURE__*/_jsxDEV(ViewContainer, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {\n        onClick: () => setView('main'),\n        children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n          size: 20,\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), \"Torna alla Dashboard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        children: \"Confronta Anni\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ComparisonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            value: selectedYear1,\n            onChange: e => setSelectedYear1(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleziona il primo anno\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), availableYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: year.value,\n              children: year.label\n            }, year.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YearDataDisplay, {\n            yearData: yearData1,\n            yearLabel: (_availableYears$find = availableYears.find(y => y.value === selectedYear1)) === null || _availableYears$find === void 0 ? void 0 : _availableYears$find.label,\n            limitedToMonth: limitedToMonth ? monthNames[limitedToMonth - 1] : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          children: /*#__PURE__*/_jsxDEV(DifferenceDisplay, {\n            yearData1: yearData1,\n            yearData2: yearData2,\n            year1Label: (_availableYears$find2 = availableYears.find(y => y.value === selectedYear1)) === null || _availableYears$find2 === void 0 ? void 0 : _availableYears$find2.label,\n            year2Label: (_availableYears$find3 = availableYears.find(y => y.value === selectedYear2)) === null || _availableYears$find3 === void 0 ? void 0 : _availableYears$find3.label,\n            limitedToMonth: limitedToMonth ? monthNames[limitedToMonth - 1] : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            value: selectedYear2,\n            onChange: e => setSelectedYear2(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleziona il secondo anno\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), availableYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: year.value,\n              children: year.label\n            }, year.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YearDataDisplay, {\n            yearData: yearData2,\n            yearLabel: (_availableYears$find4 = availableYears.find(y => y.value === selectedYear2)) === null || _availableYears$find4 === void 0 ? void 0 : _availableYears$find4.label,\n            limitedToMonth: limitedToMonth ? monthNames[limitedToMonth - 1] : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(CompareYearsView, \"Msse8wvvH3pZXsxLGMvzNLqNlgs=\");\n_c3 = CompareYearsView;\nexport default CompareYearsView;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"YearDataDisplay\");\n$RefreshReg$(_c2, \"DifferenceDisplay\");\n$RefreshReg$(_c3, \"CompareYearsView\");","map":{"version":3,"names":["React","useState","useEffect","styled","ArrowLeft","TrendingUp","TrendingDown","getYearData","getAvailableYears","jsxDEV","_jsxDEV","getCurrentYearAndMonth","now","Date","currentYear","getFullYear","currentMonth","getMonth","YearDataDisplay","yearData","yearLabel","limitedToMonth","Card","children","CardTitle","fileName","_jsxFileName","lineNumber","columnNumber","DataSection","DataTitle","totaleTurni","mediaMensile","toFixed","_c","DifferenceDisplay","yearData1","yearData2","year1Label","year2Label","calculateDifference","value1","value2","diff","percentage","totalTurniDiff","mediaMensileDiff","renderDifference","label","isPositive","Icon","DifferenceSection","size","style","marginRight","textAlign","marginBottom","_c2","CompareYearsView","setView","_s","_availableYears$find","_availableYears$find2","_availableYears$find3","_availableYears$find4","selectedYear1","setSelectedYear1","selectedYear2","setSelectedYear2","setYearData1","setYearData2","availableYears","setAvailableYears","setLimitedToMonth","limitMonth","monthNames","ViewContainer","Content","BackButton","onClick","Title","ComparisonContainer","Column","Select","value","onChange","e","target","map","year","find","y","_c3","$RefreshReg$"],"sources":["/Users/marcoaugustocomba/Documents/GitHub/StudioStats_1.2/src/CompareYearsView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ArrowLeft, TrendingUp, TrendingDown } from 'lucide-react';\nimport { getYearData, getAvailableYears } from './data';\n\n// ... (mantieni tutti gli styled components precedenti)\n\nconst getCurrentYearAndMonth = () => {\n  const now = new Date();\n  return { currentYear: now.getFullYear(), currentMonth: now.getMonth() + 1 };\n};\n\nconst YearDataDisplay = ({ yearData, yearLabel, limitedToMonth }) => {\n  if (!yearData) return null;\n\n  return (\n    <Card>\n      <CardTitle>{yearLabel}</CardTitle>\n      <DataSection>\n        <DataTitle>Totale Turni {limitedToMonth ? `(fino a ${limitedToMonth})` : ''}</DataTitle>\n        <p>{yearData.totaleTurni}</p>\n      </DataSection>\n      <DataSection>\n        <DataTitle>Media Mensile</DataTitle>\n        <p>{yearData.mediaMensile.toFixed(2)}</p>\n      </DataSection>\n    </Card>\n  );\n};\n\nconst DifferenceDisplay = ({ yearData1, yearData2, year1Label, year2Label, limitedToMonth }) => {\n  if (!yearData1 || !yearData2) return null;\n\n  const calculateDifference = (value1, value2) => {\n    const diff = value1 - value2;\n    const percentage = ((diff / value2) * 100).toFixed(2);\n    return { diff, percentage };\n  };\n\n  const totalTurniDiff = calculateDifference(yearData1.totaleTurni, yearData2.totaleTurni);\n  const mediaMensileDiff = calculateDifference(yearData1.mediaMensile, yearData2.mediaMensile);\n\n  const renderDifference = (label, diff, percentage) => {\n    const isPositive = diff > 0;\n    const Icon = isPositive ? TrendingUp : TrendingDown;\n\n    return (\n      <DifferenceSection isPositive={isPositive}>\n        <DataTitle>{label}</DataTitle>\n        <Icon size={20} style={{ marginRight: '8px' }} />\n        <p>\n          {isPositive ? '+' : ''}{diff.toFixed(2)} ({isPositive ? '+' : ''}{percentage}%)\n        </p>\n      </DifferenceSection>\n    );\n  };\n\n  return (\n    <Card>\n      <CardTitle>Differenze</CardTitle>\n      <p style={{ textAlign: 'center', marginBottom: '16px' }}>\n        {year1Label} rispetto a {year2Label}\n        {limitedToMonth ? ` (fino a ${limitedToMonth})` : ''}\n      </p>\n      {renderDifference('Totale Turni', totalTurniDiff.diff, totalTurniDiff.percentage)}\n      {renderDifference('Media Mensile', mediaMensileDiff.diff, mediaMensileDiff.percentage)}\n    </Card>\n  );\n};\n\nconst CompareYearsView = ({ setView }) => {\n  const [selectedYear1, setSelectedYear1] = useState('');\n  const [selectedYear2, setSelectedYear2] = useState('');\n  const [yearData1, setYearData1] = useState(null);\n  const [yearData2, setYearData2] = useState(null);\n  const [availableYears, setAvailableYears] = useState([]);\n  const [limitedToMonth, setLimitedToMonth] = useState(null);\n\n  const { currentYear, currentMonth } = getCurrentYearAndMonth();\n\n  useEffect(() => {\n    setAvailableYears(getAvailableYears());\n  }, []);\n\n  useEffect(() => {\n    if (selectedYear1 && selectedYear2) {\n      let limitMonth = null;\n      if (selectedYear1 == currentYear || selectedYear2 == currentYear) {\n        limitMonth = currentMonth;\n      }\n\n      setLimitedToMonth(limitMonth);\n\n      setYearData1(getYearData(selectedYear1, limitMonth));\n      setYearData2(getYearData(selectedYear2, limitMonth));\n    }\n  }, [selectedYear1, selectedYear2, currentYear, currentMonth]);\n\n  const monthNames = [\n    \"Gennaio\", \"Febbraio\", \"Marzo\", \"Aprile\", \"Maggio\", \"Giugno\",\n    \"Luglio\", \"Agosto\", \"Settembre\", \"Ottobre\", \"Novembre\", \"Dicembre\"\n  ];\n\n  return (\n    <ViewContainer>\n      <Content>\n        <BackButton onClick={() => setView('main')}>\n          <ArrowLeft size={20} style={{ marginRight: '8px' }} />\n          Torna alla Dashboard\n        </BackButton>\n        \n        <Title>Confronta Anni</Title>\n\n        <ComparisonContainer>\n          <Column>\n            <Select \n              value={selectedYear1} \n              onChange={(e) => setSelectedYear1(e.target.value)}\n            >\n              <option value=\"\">Seleziona il primo anno</option>\n              {availableYears.map(year => (\n                <option key={year.value} value={year.value}>{year.label}</option>\n              ))}\n            </Select>\n            <YearDataDisplay \n              yearData={yearData1} \n              yearLabel={availableYears.find(y => y.value === selectedYear1)?.label}\n              limitedToMonth={limitedToMonth ? monthNames[limitedToMonth - 1] : null}\n            />\n          </Column>\n          <Column>\n            <DifferenceDisplay \n              yearData1={yearData1} \n              yearData2={yearData2} \n              year1Label={availableYears.find(y => y.value === selectedYear1)?.label}\n              year2Label={availableYears.find(y => y.value === selectedYear2)?.label}\n              limitedToMonth={limitedToMonth ? monthNames[limitedToMonth - 1] : null}\n            />\n          </Column>\n          <Column>\n            <Select \n              value={selectedYear2} \n              onChange={(e) => setSelectedYear2(e.target.value)}\n            >\n              <option value=\"\">Seleziona il secondo anno</option>\n              {availableYears.map(year => (\n                <option key={year.value} value={year.value}>{year.label}</option>\n              ))}\n            </Select>\n            <YearDataDisplay \n              yearData={yearData2} \n              yearLabel={availableYears.find(y => y.value === selectedYear2)?.label}\n              limitedToMonth={limitedToMonth ? monthNames[limitedToMonth - 1] : null}\n            />\n          </Column>\n        </ComparisonContainer>\n      </Content>\n    </ViewContainer>\n  );\n};\n\nexport default CompareYearsView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}